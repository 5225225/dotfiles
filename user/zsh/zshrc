# vim:foldmethod=marker

# history {{{
setopt HIST_IGNORE_DUPS
setopt hist_verify
setopt SHARE_HISTORY
setopt HIST_IGNORE_SPACE
# }}}

# misc options {{{
setopt nomatch
setopt notify
setopt RM_STAR_WAIT
setopt complete_aliases
setopt INTERACTIVE_COMMENTS

unsetopt beep
unsetopt extendedglob

setopt noclobber
setopt correct

bindkey -v

bindkey "^R" history-incremental-search-backward
bindkey "^S" history-incremental-search-forward
# }}}

# {{{ completion

zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete _ignored _match _correct _approximate _prefix
zstyle ':completion:*' completions 1
zstyle ':completion:*' expand prefix suffix
zstyle ':completion:*' file-sort name
zstyle ':completion:*' format '----------Completing %F{cyan}%d%f----------'
zstyle ':completion:*' glob 1
zstyle ':completion:*' group-name ''
zstyle ':completion:*' insert-unambiguous true
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' list-prompt '%SAt %p: Hit TAB for more, or the character to insert%s'
zstyle ':completion:*' list-suffixes true
zstyle ':completion:*' matcher-list '' 'm:{[:lower:]}={[:upper:]} m:{[:lower:][:upper:]}={[:upper:][:lower:]}' 'l:|=* r:|=*'
zstyle ':completion:*' max-errors 1
zstyle ':completion:*' menu select=long
zstyle ':completion:*' original false
zstyle ':completion:*' preserve-prefix '//[^/]##/'
zstyle ':completion:*' select-prompt '%SScrolling active: current selection at %p%s'
zstyle ':completion:*' squeeze-slashes true
zstyle ':completion:*' substitute 1
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true
zstyle :compinstall filename '~/.config/zsh/.zshrc'

autoload -Uz compinit
compinit -d ~/.local/cache/zsh/zcompdump
# }}}

# prompt {{{

export PROMPT='
%6F%n%7F@%1F%m%7F %{%F{yellow}%}%~%f$(gitprompt)%(?..%{%F{red}%}[%?]%f)
%{%F{blue}%}#%f '

# }}}

# envars and xdg settings {{{
export REPORTTIME=5
export CARGO_TARGET_DIR="$HOME/.cache/cargo/target"
export BROWSER="firefox"
# less colours {{{
export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;38;5;74m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[38;5;246m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[04;38;5;146m'
# }}}
# }}}

# utility functions {{{
defined() {
    which $1 2>&1 >/dev/null
}

try_source() {
    [ -f "$1" ] && source "$1"
}

# }}}

# hooks {{{
command_not_found_handler() {
    command-not-found "$1"
}

function autols() {
    exa --group-directories-first --git --extended
}

function osc7-pwd() {
    emulate -L zsh # also sets localoptions for us
    setopt extendedglob
    local LC_ALL=C
    printf '\e]7;file://%s%s\e\' $HOST ${PWD//(#m)([^@-Za-z&-;_~])/%${(l:2::0:)$(([##16]#MATCH))}}
}

function chpwd-osc7-pwd() {
    (( ZSH_SUBSHELL )) || osc7-pwd
}
add-zsh-hook -Uz chpwd chpwd-osc7-pwd
add-zsh-hook -Uz chpwd autols
# }}}

# command enhancements {{{
# Translations to better versions, as well as setting default options.

if (defined sudo) {
    # Expands aliases inside sudo
    alias sudo="sudo "
}

if (defined youtube-dl) {
    alias youtube-dl="noglob youtube-dl $@"
}

if (defined ncmpcpp) {
    alias ncmpcpp="ncmpcpp --config ~/.config/ncmpcpp/config --bindings ~/.config/ncmpcpp/bindings"
}
# }}}

# utility functions {{{
# Functions that may depend on shell commands, but are not shadowing one

scratch() {
    cd "$(mktemp --tmpdir -d scratchXXXXXXXXX)"
}

defined curl && alias headers="curl --dump-header /dev/stdout --output /dev/null --silent"

if (defined git) {
    alias gs="git status"
}

defined curl && alias cget="curl -C - -L -O --retry 10"

if (defined cargo) {
    alias cr="cargo run -q"
    alias crr="cargo run --release -q"

    function cdo() {
        RUSTDOCFLAGS="--default-theme ayu" cargo doc -Zrustdoc-map --open $@
    }
}

# }}}

zmodload zsh/terminfo
