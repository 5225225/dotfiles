#!/bin/python

import sys
import shlex
import subprocess

top_commands = [
"== Play ==",
"== Playlists ==",
"== Clear ==",
"== Search ==",
]

def getartists():
    return subprocess.check_output(["mpc", "list", "albumartist"]).decode("UTF8").strip().split("\n")

def getalbums(x):
    return subprocess.check_output(["mpc", "find", "albumartist", x]).decode("UTF8").strip().split("\n")

def getalbums(x):
    return subprocess.check_output(["mpc", "list", "album", "albumartist", x]).decode("UTF8").strip().split("\n")

def getsongs(artist, album=None):
    if album is None:
        return subprocess.check_output(["mpc", "find", "albumartist", artist]).decode("UTF8").strip().split("\n")
    else:
        return subprocess.check_output(["mpc", "find", "albumartist", artist, "album", album]).decode("UTF8").strip().split("\n")

def addsongs(paths):
    proc = subprocess.Popen(["mpc", "add"], stdin=subprocess.PIPE)
    proc.communicate("\n".join(paths).encode("UTF8"))

def insertsongs(paths):
    proc = subprocess.Popen(["mpc", "add"], stdin=subprocess.PIPE)
    proc.communicate("\n".join(paths).encode("UTF8"))

def getplaylists():
    return subprocess.check_output(["mpc", "lsplaylists"]).decode("UTF8").strip().split("\n")

def mpc_play():
    subprocess.call(["mpc", "play"])

def mpc_next():
    subprocess.call(["mpc", "next"])

def playplaylist(plistname):
    subprocess.call(["mpc", "clear"])
    subprocess.call(["mpc", "load", plistname])
    subprocess.call(["mpc", "play"])

def getplist():
    x = subprocess.check_output(["mpc", "playlist"]).decode("UTF8").strip().split("\n")
    if x == [""]:
        subprocess.call(["notify-send", "MPD", "There doesn't seem to be anything here."])
    else:
        return x

def playindex(x):
    subprocess.call(["mpc", "play", str(x)])

def search(searchstr):
    return subprocess.check_output(["mpc", "search", "any", searchstr]).decode("UTF8").strip().split("\n")

def dmenu(choices, prompt=": "):
    cmd = DMENU

    cmd += " -p '{}'".format(prompt)

    cmd = shlex.split(cmd)


    proc = subprocess.Popen(cmd, stdin=subprocess.PIPE, stdout=subprocess.PIPE)

    choice = proc.communicate("\n".join(choices).encode("UTF8"))[0].strip().decode("UTF8")

    if choice == "!kill":
        sys.exit(0)


    return choice

    

DMENU  = "rofi "
DMENU += "-dmenu "
DMENU += "-i "

while True:

    artist = dmenu(top_commands + getartists())

    if artist == "== Play ==":
        currplist = getplist()
        if currplist is not None:
            toplay = dmenu(currplist)
            for index, item in enumerate(currplist, 1):
                if toplay == item:
                    playindex(index)
                    break

    elif artist == "== Playlists ==":
        playlists = getplaylists()
        toplay = dmenu(playlists)
        for item in playlists:
            if toplay == item:
                playplaylist(item)
                break

    elif artist == "== Clear ==":
        subprocess.call(["mpc", "clear"])

    elif artist == "== Search ==":
        searchstr = dmenu([], "search: ")

        song = dmenu(["== All =="] + search(searchstr))

        if song == "== All ==":
            insertsongs(search(searchstr))
        else:
            insertsongs([song])

        mpc_play()
    elif artist == "":
        sys.exit(0)

    else:
        albums = getalbums(artist)
        albums.insert(0, "== All ==")
        album = dmenu(albums)
        if album == "== All ==":
            addsongs(getsongs(artist))
        else:
            addsongs(getsongs(artist, album))

        mpc_play()
