" Make vim actually respect XDG
set runtimepath=$XDG_CONFIG_HOME/vim,$XDG_CONFIG_HOME/vim/after,$VIM,$VIMRUNTIME
set dir=~/.cache/vim
set viminfo+=n$XDG_CACHE_HOME/vim/viminfo

set nobackup
set noswapfile


execute pathogen#infect()

unlet! skip_defaults_vim
source $VIMRUNTIME/defaults.vim

filetype plugin indent off
set mouse=

set expandtab
set shiftwidth=4
set softtabstop=4
set autoindent
set smarttab

set number

colorscheme base16-default
set background=dark

filetype plugin on
syntax on

set tw=99

set modeline
set modelines=5

set backspace=indent,eol,start

set incsearch
set autoread

set laststatus=2

set smartcase

set spell
set wrapscan

set clipboard^=unnamed

set ttimeout
set ttimeoutlen=50

set ruler
set showcmd
set wildmenu

set gdefault

let g:tex_flavor = "latex"

autocmd FileType make setlocal noexpandtab
autocmd FileType make setlocal nosmarttab

" Code from:
" http://stackoverflow.com/questions/5585129/pasting-code-into-terminal-window-into-vim-on-mac-os-x
" then https://coderwall.com/p/if9mda
" and then https://github.com/aaronjensen/vimfiles/blob/59a7019b1f2d08c70c28a41ef4e2612470ea0549/plugin/terminaltweaks.vim
" to fix the escape time problem with insert mode.
"
" Docs on bracketed paste mode:
" http://www.xfree86.org/current/ctlseqs.html
" Docs on mapping fast escape codes in vim
" http://vim.wikia.com/wiki/Mapping_fast_keycodes_in_terminal_Vim

if !exists("g:bracketed_paste_tmux_wrap")
  let g:bracketed_paste_tmux_wrap = 1
endif

function! WrapForTmux(s)
  if !g:bracketed_paste_tmux_wrap || !exists('$TMUX')
    return a:s
  endif

  let tmux_start = "\<Esc>Ptmux;"
  let tmux_end = "\<Esc>\\"

  return tmux_start . substitute(a:s, "\<Esc>", "\<Esc>\<Esc>", 'g') . tmux_end
endfunction

let &t_SI .= WrapForTmux("\<Esc>[?2004h")
let &t_EI .= WrapForTmux("\<Esc>[?2004l")

function! XTermPasteBegin(ret)
  set pastetoggle=<f29>
  set paste
  return a:ret
endfunction

execute "set <f28>=\<Esc>[200~"
execute "set <f29>=\<Esc>[201~"
map <expr> <f28> XTermPasteBegin("i")
imap <expr> <f28> XTermPasteBegin("")
vmap <expr> <f28> XTermPasteBegin("c")
cmap <f28> <nop>
cmap <f29> <nop>

set foldmethod=syntax

let g:netrw_dirhistmax=0
